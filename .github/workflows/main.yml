# This is a basic workflow to help you get started with Actions

name: CI / CD Docker

on:
    push:
        branches: [develop]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

env:
    DOCKER_IMAGE: ghcr.io/kukucorn/jejukindstore_backend
    VERSION: ${{ github.sha }}

jobs:
    build:
        name: deploy
        runs-on: ubuntu-latest
        steps:
            - name: executing remote ssh commands
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.KEY }}
                  port: ${{ secrets.PORT }}
                  script: |
                      cd jejukindstore/scripts
                      sh start-develop-server.sh

    #  docker에 대한 지식이 부족해서 공부 후, 사용해보자..
    #   name: build
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Check out source code
    #       uses: actions/checkout@v2
    #     - name: Set up docker buildx
    #       id: buildx
    #       uses: docker/setup-buildx-action@v1
    #     - name: Cache docker layers
    #       uses: actions/cache@v2
    #       with:
    #         path: /tmp/.buildx-cache
    #         key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들임.
    #         restore-keys: |
    #           $${{ runner.os }}-buildx-
    #     - name: Login to ghcr
    #       uses: docker/login-action@v1
    #       with:
    #         registry: ghcr.io
    #         username: ${{ github.actor }}
    #         password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
    #     - name: Build and push
    #       id: docker_build
    #       uses: docker/build-push-action@v2
    #       with:
    #         builder: ${{ steps.buildx.outputs.name }}
    #         push: true
    #         tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

    # deploy:
    #   needs: build
    #   name: Deploy
    #   runs-on: [ self-hosted, label-development ]
    #   steps:
    #     - name: Login to ghcr
    #       uses: docker/login-action@v1
    #       with:
    #         registry: ghcr.io
    #         username: ${{ github.actor }}
    #         password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
    #     - name: Run docker
    #       run: |
    #         docker ps -q --filter "name=${{ env.DOCKER_NAME }}" | grep -q . && docker stop ${{ env.DOCKER_NAME }} && docker rm -fv ${{ env.DOCKER_NAME }}
    #         docker run -d -p 3000:3000 --name ${{ env.DOCKER_NAME }} --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
    #       env:
    #         DOCKER_NAME: express-test
